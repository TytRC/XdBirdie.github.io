<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Birdie</title>
  
  <subtitle>Keep running...</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-11T15:35:59.848Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Rain Chen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>谈幸福</title>
    <link href="http://yoursite.com/2020/03/11/%E8%B0%88%E5%B9%B8%E7%A6%8F/"/>
    <id>http://yoursite.com/2020/03/11/%E8%B0%88%E5%B9%B8%E7%A6%8F/</id>
    <published>2020-03-11T15:19:26.000Z</published>
    <updated>2020-03-11T15:35:59.848Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;我曾一直在思考，什么是幸福？我们怎么幸福？<a id="more"></a>我做了一个大胆的假设，当我所有所期望的物质条件全部被满足之后（不再为钱而发愁，但也不至于“不爱钱，没碰过钱”），我就可以幸福了吗？</p><p>&emsp;&emsp;正如之前单身的时候（现在也是），总是期望能有一场甜掉牙的恋爱，也总是觉得有了女朋友，糖就来了。但是我发现事与愿违，总是有很多约束束缚着我们，老师家长同学等等。但其实最束缚的还是我们自己。我们无法做到开诚布公，也无法相信对方开诚布公，无法忍受对方的观念并为此大吵特吵。</p><p>&emsp;&emsp;爱情是需要酝酿的，不是想来的，是真的需要努力，努力地去挣脱自我的束缚的。爱情是一种能力。宽容、接受、交流、共情甚至你自身的一些特征，才能铸就爱情。谈恋爱时我常常痛恨自己不够幽默，不够大气，情商低，在面对困扰时束手无策。</p><p>&emsp;&emsp;幸福也如此。如果给了我足够的物质，不出意外我很可能会去放纵自己，虽然我知道沉浸在知识和探索中的快乐是长久而高尚的，但是远不及放纵来的轻易与猛烈。可是久而久之，原有的刺激就不再满足于我，而去追求更高的刺激，而每天醉生梦死之后只剩萧条。这样是真的快乐吗？是真的幸福吗？</p><p>&emsp;&emsp;有一天早上我打开联盟，打了一盘又一盘，没有人管我，打到最后只剩机械的点击鼠标，我的精神已经萎靡了，我需要休息，但是我不愿。因为这意味着放弃现有的刺激，虽然我知道休息后的快乐会多得多。</p><p>&emsp;&emsp;幸福不仅仅是一种状态，幸福更是一种能力。</p><p>&emsp;&emsp;幸福是需要自我约束的，“自律给我自由”这句话并不只是无用的鸡汤，更是有它其中的道理，真正自律了你才能摆脱刻在你基因中那些放纵的本性，修饰掉人固有的趋利避害性——只看眼前的趋利避害，从而让自己真正可以去做自己想做的事情，而不是做兽性的傀儡。</p><p>&emsp;&emsp;所以我们要在任何时候保持规律的作息和平静的心态。时时刻刻让自己的意志控制住自己，而不是让欲望绑架着自己。这是一种良好积极的生活态度，一把打开幸福之门的钥匙。真正的快乐，平淡而源远流长，蕴含在每天不经意的瞬间，绽放于心愿完成后的惊喜，而不是放纵后的枯燥无味。</p><p>&emsp;&emsp;很多时候，我们看似掌握全局，实则是在博弈。败者的下场只有一个，失去自我意志。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;我曾一直在思考，什么是幸福？我们怎么幸福？
    
    </summary>
    
    
      <category term="随笔杂谈" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="个人" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA/"/>
    
      <category term="看法" scheme="http://yoursite.com/tags/%E7%9C%8B%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Git&amp;GitHub初体验</title>
    <link href="http://yoursite.com/2020/02/28/Github_first_try/"/>
    <id>http://yoursite.com/2020/02/28/Github_first_try/</id>
    <published>2020-02-28T07:18:31.000Z</published>
    <updated>2020-03-01T15:29:01.293Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;在搭建博客的过程中开始真正接触到git这一强大的工具，也就很快对其产生了好奇心。于是写一篇博客来记录自己学习git和github的过程。</p> <a id="more"></a><p>&emsp;&emsp;首先推一篇<a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">廖雪峰的博客</a>，内容详实，语言幽默。我也是跟着这篇博客学习的。</p><h2 id="git简介"><a href="#git简介" class="headerlink" title="git简介"></a>git简介</h2><h3 id="git是什么"><a href="#git是什么" class="headerlink" title="git是什么"></a>git是什么</h3><p>&emsp;&emsp;git是一个分布式的版本控制系统，可以帮助我们进行版本控制。而GitHub是一个远程的代码仓库，可以帮助我们进行代码托管。</p><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p>&emsp;&emsp;Windows下通过<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">官网</a>下载即可，安装提示安装后可以在cmd中通过<code>git --version</code>来查看自己是否配置成功。如图:<br><img src="\../images/git_version.png" alt="git_version"></p><h3 id="建立本地版本库"><a href="#建立本地版本库" class="headerlink" title="建立本地版本库"></a>建立本地版本库</h3><h4 id="版本库"><a href="#版本库" class="headerlink" title="版本库"></a>版本库</h4><p>&emsp;&emsp;又名仓库，英文名为repository(就是github上的那个)，里面文件的操作可以被git记录，包括修改和删除，以便在需要的时候进行版本回退。在我看来，就好像在你的工作目录里面设置了一个机器人可以帮助你进行代码管理。当你完成工作后，就告诉它一声“我刚刚的工作完了，帮我作个记录吧！这次的工作是XXX”。然后某天你想回到之前的版本的时候，只需要给它说：“哦，上帝！我不小心搞砸了，请帮我回退到我做XXX工作的那次吧！”，然后就可以回退到之前的版本了。当然目前我的理解可能十分不到位……毕竟也是刚接触，对git的机理尚不熟悉。</p><h4 id="使用git-init初始化仓库"><a href="#使用git-init初始化仓库" class="headerlink" title="使用git init初始化仓库"></a>使用<code>git init</code>初始化仓库</h4><p>&emsp;&emsp;我们在cmd中进入到自己的工程根目录所在的文件夹，然后使用<code>git init</code>命令就可以初始化一个仓库了。如图：<br><img src="\../images/git_init.png" alt="git_init"><br>然后在目录下我们可以看到多了一个名为<code>.git</code>的隐藏文件夹。里面是git的配置文件，我们无须关心，也不要去动。如图:<br><img src="\../images/git_folder.png" alt="git_folder"><br>这里为了演示我是新建了一个空文件夹，当让如果文件夹里面已经有了文件，也是被允许的。</p><h4 id="修改仓库中的文件"><a href="#修改仓库中的文件" class="headerlink" title="修改仓库中的文件"></a>修改仓库中的文件</h4><p>&emsp;&emsp;一般来说，每个仓库都会有一个<code>README</code>文件（起码我目前看到的是这样），用于告诉别人（因为git很常用于多人协作）这个项目是做什么的，里面的文件是什么等等，就起一个摘要的作用。所以我们给我们的仓库添加一个<code>README</code>文件，当然必须在仓库的根目录或者子目录里面创建，否则git是追踪不到的。根据廖雪峰老师的博客，git只能监视文本文件内容的具体改动，比如一个txt文件，你写了”Hello World”，这个是可以被git所具体知道的。但是如果一个二进制文件，比如一张图片，你把它裁剪了一部分，它只知道照片小了，但具体改动它是不明确的。(word也是二进制文件！震惊！)</p><p>&emsp;&emsp;我们在仓库根目录下新建<code>README.txt</code>文件，更改里面的内容如下(不要使用记事本，这可能会带来意料之外的编码错误):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">This is a README file.</span><br><span class="line">Glad to meet you.</span><br></pre></td></tr></table></figure><br>&emsp;&emsp;然后我们需要告知git我们对文件进行了修改，需要如下命令:</p><p>&emsp;&emsp;第一步:使用<code>git add [file name]</code>告知git，我们将哪些文件添加到仓库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add README.txt</span><br></pre></td></tr></table></figure><br>&emsp;&emsp;第二步:使用<code>git commit</code>告知git，将文件提交到仓库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;First commit&quot;</span><br></pre></td></tr></table></figure><br>&emsp;&emsp;其中,<code>-m</code>参数后面跟的是这次提交的描述。也就是我们改动了什么一类的内容。当然你可以随便写，但是最好是有实际意义，否则下一个接手的人可能想杀人。</p><p>&emsp;&emsp;当然这里有一个疑问，就是为什么将一个文件在版本库更新为什么要分两步呢？第一步<code>add</code>可以多次使用,选择不同的文件，然后使用<code>commit</code>一次提交。可以使用<code>add .</code>来选定所有文件。</p><p>&emsp;&emsp;至于具体的版本控制，emmmmmm这个我也不会，因为还没有用到过……所以还是先说一下<code>github</code>的使用。</p><h2 id="远程仓库，GitHub"><a href="#远程仓库，GitHub" class="headerlink" title="远程仓库，GitHub"></a>远程仓库，GitHub</h2><h3 id="创建远程仓库"><a href="#创建远程仓库" class="headerlink" title="创建远程仓库"></a>创建远程仓库</h3><p>&emsp;&emsp;注册一个GitHub账号，在GitHub右上角可以创建一个新的远程仓库。如下图:</p><p><img src="\../images/github_new_repo.png" alt="github_new_repo"></p><p>&emsp;&emsp;点进去页面如下:</p><p><img src="\../images/github_create_repo.png" alt="github_create_repo"></p><p>&emsp;&emsp;用作演示，我们创建了一个名为<code>GitHubTest</code>的仓库，并且没有初始化<code>README</code>文件。如下图:(当然什么都没有)</p><p><img src="\../images/GitHubTest_repo.png" alt="GitHubTest_repo"></p><p>&emsp;&emsp;其中红框的部分是这个仓库的公钥，我们在本地根据这个公钥可以关联这个远程仓库。当然，别人的仓库你也是可以关联的，但是由于对方仓库的权限限制，你无法进行同步操作。</p><p>&emsp;&emsp;我们在cmd中进入到本地仓库的根目录，执行命令<code>git remote add origin [仓库SSH]</code>,SSH即为前面图片框起来的部分。如图:</p><p><img src="\../images/git_remote.png" alt="git_remote"></p><p>&emsp;&emsp;似乎是什么都没发生，那就说明我们没做错。简洁的即是美的。</p><p>&emsp;&emsp;这个命令的作用是关联一个远程仓库，其中<code>origin</code>是这仓库的名字，当然你也可以用别的单词来代替。但<code>origin</code>是我们约定俗称的，用来表示远程仓库。</p><p>&emsp;&emsp;下面我们应用<code>git push -u origin master</code>将本地仓库推送到远程仓库上。</p><p><img src="\../images/git_push.png" alt="git_push"></p><p>&emsp;&emsp;把本地库的内容推送到远程，用<code>git push</code>命令，实际上是把当前分支<code>master</code>推送到远程。</p><p>&emsp;&emsp;由于远程库是空的，我们第一次推送<code>master</code>分支时，加上了<code>-u</code>参数，Git不但会把本地的<code>master</code>分支内容推送的远程新的<code>master</code>分支，还会把本地的<code>master</code>分支和远程的<code>master</code>分支关联起来，在以后的推送或者拉取时就可以简化命令。(这段是抄的)</p><p>&emsp;&emsp;当我们查看我们的远程仓库时，你会惊奇地发现，我们的远程仓库已经有了和本地仓库一样的文件(第一次这么做的时候我惊喜了老半天，觉得好神奇)。如图:</p><p><img src="\../images/github_check.png" alt="git_check"></p><p>&emsp;&emsp;以后我们提交远程仓库，只需要使用<code>git push origin master</code>就可以了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;在搭建博客的过程中开始真正接触到git这一强大的工具，也就很快对其产生了好奇心。于是写一篇博客来记录自己学习git和github的过程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="github" scheme="http://yoursite.com/categories/github/"/>
    
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
      <category term="learning" scheme="http://yoursite.com/tags/learning/"/>
    
  </entry>
  
  <entry>
    <title>RainCurtain</title>
    <link href="http://yoursite.com/2020/02/25/RainCurtain/"/>
    <id>http://yoursite.com/2020/02/25/RainCurtain/</id>
    <published>2020-02-25T15:17:08.000Z</published>
    <updated>2020-03-11T15:50:28.116Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;日子一天天地过，每天似乎毫无新意。</p> <a id="more"></a><p>&emsp;&emsp;今天19年10月14日，也不算是个什么特别的日子。不多能让我的这一天变得特殊的，或许就是在今天我开通了我的第一个博客吧。细想过来每一天都是那么的相似，不过是因为有了某些事情，才变得特殊起来，比如新生命的诞生，又比如挚爱的分别。  </p><p>&emsp;&emsp;说起来写一个博客还是昨天ACM讲座听一位dalao演讲时建议的，说写一个博客，记录自己的学习历程，一方面可以记录自己生活中的点点滴滴，另一方面可以当作笔记来用，学完别人的再自己写一遍总会好很多，再一方面也算是互帮互助吧，在学习的过程中很多人给予了我们很多力量，我们也要给与更多人更多力量。  </p><p>&emsp;&emsp;我给这篇文章取名为RainCurtain，这是恰好昨天许嵩发了一首新歌，名字就叫做雨幕，初听很平淡，旋律也是感觉很相似。细听好像有那么几分味道，曲子听起来也还不错。无所谓了，反正我无法做到客观中立，那我就自己开心好了。  </p><p>&emsp;&emsp;雨幕，说起来我还真没想到西安也是一座“阴雨的小城”，来到西安，大半数时间都在阴雨天气吧，见到阳光是一件很奢侈的事情。我戏称这是西北的“梅雨季节”。  </p><p>&emsp;&emsp;说实话西安给我的第一印象并不是很好，因为阴天。阴天，雨雾，给人以一种阴沉沉的感觉。虽然我喜欢阴雨。但是习惯了北湖的阳光与纯净的天空与新鲜的空气的我难免有些不适应。</p><p>&emsp;&emsp;不过想来喜欢阴雨，是因为它总能让我回忆起之前的一些事情，比如儿童时期雨天一起在村大队里的玩闹，比如初中那些在雨中在操场上在城市中的狂奔，又比如高中雨中的运动会，以及秦旭。不过来到西安后，这些都不见了，都离我远去了。想在雨天抽身找人一起闲逛聊聊之前，看看往后都找不到了。甚至想对望一眼恒大的那一件屋子也做不到了。见不到熟悉的人熟悉的景熟悉的事。“叹一句当时只道是寻常”</p><p>&emsp;&emsp;<strong>不过现在也会变成寻常吧，我猜。</strong></p><p>&emsp;&emsp;其实很多事情就是这样吧，当你觉得以后总会有很多的时候，最后你才会发现原来“盛庭难在”。就像之前那一段时间秦旭几乎每个星期都陪我出去玩，我就以为以后我们出来玩的时间多着呢，然后就再没出来过。就像暑假秦旭说：这是我最后一次和你出来了；然后那以后我到现在还没再见到她，除了在梦里和在网上。</p><p>&emsp;&emsp;<strong>挺好的，现在就挺好的我觉得。真的挺好的。我不想再有什么改变，但我知道这种状态是一种伪装的平衡，指不定哪天就突然消失不见，只剩下怀念。</strong></p><p>&emsp;&emsp;那我不如好好珍惜这最近慵懒平静开心自由的快乐生活，在它远离之前好好的享受它。毕竟谁也不知道明天会不会突然世界毁灭或者猝死。</p><p>&emsp;&emsp;<strong>也许人世间一切的美好都是短暂的，短暂所以美丽。终会消逝。与其祈求长久，不如把握当下，珍惜时光。</strong></p><p>&emsp;&emsp;或许这样便可留住快乐，或者说，坦坦荡荡好过忧情伤神。</p><p>&emsp;&emsp;说了这么多，似乎是和“雨幕”没有什么关系。也没必要有什么关系，只不过是从下雨让我联想到了很多事情罢了。</p><p>　　The world is a dream in rain<br>　　The splashes of water shines don’t you see<br>　　Watch out<br>　　Don’t step on the fish in the pool<br>　　I’m a little soaking mouse<br>　　I’m wet with a blanket of rain<br>　　And I dream of you</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;日子一天天地过，每天似乎毫无新意。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔杂谈" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="个人" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA/"/>
    
      <category term="情绪" scheme="http://yoursite.com/tags/%E6%83%85%E7%BB%AA/"/>
    
  </entry>
  
</feed>
